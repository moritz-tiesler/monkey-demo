
let null = [1, 2][2];

let Option = fn(x) {
    if (x == null) {
        fn() {null};
    } else {
        fn() {x};
    }
};

let unwrap = fn(opt) {
    let val = opt();
    return val;
};

let optionMap = fn(opt, func) {
    let val = opt.unwrap()
    if (val) {
        return Option(func(val));
    } else {
        return Option(null);
    }
};

let optionBind = fn(opt, func) {
    let val = opt.unwrap()
    if (val) {
        return func(val);
    } else {
        return Option(null);
    }
};

let get = fn(arr, i) {
    Option(arr[i]);
};

let double = fn(x) {x + x};

let optElem = get([1, 2], 1);
let optMapped = optElem.optionMap(double);

let res = optMapped.unwrap();
puts(res)

